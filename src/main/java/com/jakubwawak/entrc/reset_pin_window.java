/*
by Jakub Wawak
kubawawak@gmail.com
all rights reserved
 */
package com.jakubwawak.entrc;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;

/**
 *Object that creates reset window
 * @author jakubwawak
 */
public class reset_pin_window extends javax.swing.JDialog {

    /**
     * Creates new form reset_pin_window
     */
    
    Database_Connector database;
    String combobox_selected;
    
    public reset_pin_window(java.awt.Frame parent, boolean modal,Database_Connector database) throws SQLException {
        super(parent, modal);
        this.database = database;
        combobox_selected = "";
        initComponents();
        load_workers_combobox();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combobox_userlist = new javax.swing.JComboBox<>();
        button_resetpin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("RESET PIN");

        combobox_userlist.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        combobox_userlist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combobox_userlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_userlistActionPerformed(evt);
            }
        });

        button_resetpin.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        button_resetpin.setText("RESET PIN");
        button_resetpin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_resetpinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(button_resetpin, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
                    .addComponent(combobox_userlist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(combobox_userlist, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_resetpin, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combobox_userlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_userlistActionPerformed
        button_resetpin.setText("RESET PIN");
        combobox_selected = combobox_userlist.getSelectedItem().toString();
    }//GEN-LAST:event_combobox_userlistActionPerformed

    private void button_resetpinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_resetpinActionPerformed
        if ( button_resetpin.getText().equals("RESET PIN")){
            if ( !combobox_selected.equals("") && !combobox_selected.equals("Wybierz z listy")){
                String id = combobox_selected.split(":")[1].split(":")[0];
                try{
                    int worker_id = Integer.parseInt(id);
                    // here we reseting pin
                    String new_pin = database.reset_pin(worker_id);
                    
                    button_resetpin.setText("NOWY PIN: "+new_pin);
                    combobox_userlist.setEnabled(false);
                    database.log_PIN_FORGOT(worker_id);
                }catch(NumberFormatException e){
                    new message_window_jdialog(this,true,"Błąd: "+e.toString());
                    new message_window(null,true,"Bład worker_id. Skontaktuj się z administratorem");
                    dispose();
                } catch (SQLException ex) {
                    new message_window_jdialog(this,true,"Błąd: "+ex.toString());
                    new message_window(null,true,"Błąd bazy danych. Skontaktuj sie z administratorem");
                    dispose();
                }
            }
            else if ( button_resetpin.getText().contains("NOWY PIN:")){
                dispose();
            }
            else{
                button_resetpin.setText("BRAK WYBORU");
            }
        }
    }//GEN-LAST:event_button_resetpinActionPerformed
    
    /**
     * Function for reset window content
     * @throws SQLException 
     */
    void reset_window() throws SQLException{
        load_workers_combobox();
        button_resetpin.setText("RESET PIN");
    }
    
    /**
     * Function for loading workers list
     * @throws SQLException 
     */
    void load_workers_combobox() throws SQLException{
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
        
        ArrayList<String> workers_list = database.get_all_workers();
        dcbm.addElement("Wybierz z listy");
        
        if ( workers_list != null ){
            dcbm.addAll(workers_list);
        }
        else{
            new message_window(null,true,"Błąd przy wczytwaniu pracownikow. Skontaktuj sie z administratorem.");
            dispose();
        }
        
        combobox_userlist.setModel(dcbm);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_resetpin;
    private javax.swing.JComboBox<String> combobox_userlist;
    // End of variables declaration//GEN-END:variables
}
